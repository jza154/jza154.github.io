div.container {
    width: 100%;
    border: 1px solid gray;
}

header, footer {
    padding: 1%;
    color: white;
    background-color: black;
    clear: left;
    text-align: center;
}

nav {
    float: left;
    max-width: 100%;
    margin: 0;
    padding: 1em;
}

nav ul {
    list-style-type: none;
    padding: 5%;
}
   
nav ul a {
    text-decoration: none;
}

table {
   margin-top: 10%;
   width: 70%;
   border: 1px solid black;
}
li {
   display: inline;
}

li a {
   text-decoration: none;
   background-color: #7796eb;
   color: #FFF;
   padding: 1% 20%;
}

li a:hover {
   background-color:  #ffff00 ;
   color: #fff;
}

h1{
  text-align: center;
}

body {
    background-color:  #0fbcf9;
}


#content{
    margin-left: 30%;
    overflow: hidden;
}

.container1{

    /* Set a counter named cnt to 0 */
    counter-reset: cnt;
    position:relative;
    text-align:center;
    padding:20px 0;
    width:420px;
    height: 160px;
   margin-left: 10%;
}

/* You can style pseudo elements and give them content,
   as if they were real elements on the page */

.container1::before{
    display: block;
    content:'Hover to Check out the latest releases:';
    font-size:18px;
    font-weight:bold;
    text-align:center;
    padding:15px;
}

.container1 span{
    display:inline-block;
    padding:10px 10px;
    background-color:#78CCD2;
    color:#186C72;
    border-radius:4px;
    margin:5%;
    cursor:default;

}

/* Create a counter with a pseudo element */

.container1 span::after{

    /* Every time this rule is executed, the 
       counter value is increased by 1 */
    counter-increment: cnt;

    /* Add the counter value as part of the content */
    content:" #" counter(cnt);

    display:inline-block;
    padding:4px;
}

/* Pseudo elements can even access attributes of their parent element */

.container1 span::before{
    position:absolute;
    bottom:0;
    left:0;
    width:100%;
    content:attr(data-title);
    color:#666;

    opacity:0;

    /* Animate the transitions */
    -webkit-transition:opacity 0.4s;
    transition:opacity 0.4s;
}

.container1 span:hover::before{
    opacity:1;
}


